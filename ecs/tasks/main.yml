---

# Check pre-requisites
- import_tasks: pre-requisites.yml

- block:
  # Cluster: A logical grouping of container instances that you can place tasks on
  - name: "AWS | ECS | Provision the cluster"
    ecs_cluster:
      name: "{{ ecs_cluster_name }}"
      state: present
    register: ecs_cluster

  - debug: var=ecs_cluster verbosity=3

  # Permissions: IAM role for permissions on EC2 instances
  - name: "AWS | IAM | Create IAM role needed for cluster EC2 instances access to AWS EC2 services"
    iam_role:
      name: "{{ ecs_instance_iam_role }}"
      description: "Role for EC2 instances that are part of EC2 clusters"
      assume_role_policy_document: "{{ lookup('file', 'iam_trust_policy.json')  }}"
      managed_policy:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      state: present
    register: iam_machine_role

  - debug: var=iam_machine_role verbosity=2

  - name: Wait for IAM role to become available
    pause:
      seconds: 10
    when: iam_machine_role.changed

  # Permissions: Add CloudWatch policy to IAM role, as we create new LogGroups from the instance, see awslog config setup through user_data
  - name: "AWS | IAM | Attach IAM inline policy to IAM role to also create LogGroups on CloudWatch"
    iam_policy:
      iam_type: role
      iam_name: "{{ iam_machine_role.iam_role.role_name }}"
   